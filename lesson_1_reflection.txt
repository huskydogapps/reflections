How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because running diff displays any text that updated such as one line that contained a misspelling.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Because you can quickly refer to something created in the past even if it isnâ€™t implemented.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Auto save causes the save to have no logical meaning, but makes sure they are saved. Saving with commit allows you to be more flexible and saves have meaning.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It all depends on the functionality of how the files are used and shared.

How can you use the commands git log and git diff to view the history of files?

    You can view the specific changes between two different commits.

How might using version control make you more confident to make changes that
could break something?

    Because you know that you can always resort to a previous save state of files.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
